
第一步：
vue 打包的时候，需要加一个前缀 例如：/api (例如：baseURL: "/api")
这样所有页面请求都有以/api开头

第二步：
设置，setting中TEMPLATES中'DIRS': [os.path.join(BASE_DIR, 'dist')] 和 STATICFILES_DIRS=[os.path.join(BASE_DIR,'dist/static')]

第三步：在项目下的url添加，注意不要在app下面添加，在项目下添加，可以直接随便一个index或其它随意名字就可以访问首页，而不需要在加api
from django.views.generic.base import TemplateView
urlpatterns = [
    path('api/',include("new.urls",namespace="new")),
    re_path(r'.*', TemplateView.as_view(template_name='index.html'))
]
第四步：由于在打包vue的时候，添加/api所以，刚上面也看到需要在项目下加个api/这样，后台程序才能访问，而首页，只需要随意一个名称就能访问，
所以，访问首页的路径一定不能跟后台程序访问django的数据路径一致，否则会出错

另外：如果你把vue项目放在django里，就需要设置上面4点

第五步：nginx关键设置(设置两个server,第一个反代到第二个，因为django是以8000端口打开)
注意：如果你在nginx中有设置/api就要把项目下面的/api去掉，否则就多加个/api了，

http {
  limit_conn_zone $binary_remote_addr zone = conn_ip: 10m;
  limit_conn   conn_ip  3;
  include       mime.types;
  default_type  application /octet - stream;
  server_tokens off;

  upstream vueapp {
    server 127.0.0.1: 8000;
  }
  server {
    listen       80;
    location / {
      root /home/dist2/dist;
      index index.html;
      try_files $uri $uri/ /index.html;    //这个很重要，决定页面不会跳404
      #当用户请求 http://localhost/example 时，这里的 $uri 就是 /example。 
      #try_files 会到硬盘里尝试找这个文件。如果存在名为 /$root/example（其中 $root 是项目代码安装目录）的文件，就直接把这个文件的内容发送给用户。 
      #显然，目录中没有叫 example 的文件。然后就看 $uri/，增加了一个 /，也就是看有没有名为 /$root/example/ 的目录。 
      #又找不到，就会 fall back 到 try_files 的最后一个选项 /index.php，发起一个内部 “子请求”，也就是相当于 nginx 发起一个 HTTP 请求到 http://localhost/index.php。 
  }

  location /api {
    proxy_pass  http://vueapp;
  }
}
server {
  listen 8000;
  server_name 192.168.159.138;
  location / {
    include  /usr/local/nginx/conf/uwsgi_params;
    uwsgi_pass localhost: 8001;
}
location /static {
  alias /home/dist/dist/static;
    }
  }
}

