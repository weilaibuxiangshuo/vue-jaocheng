*注意vue-cli打包是不会把devServer代理打包进去的，因为devServer只用于开发环境，所以，nginx不用考虑vue代理设置的问题
*但vue中打包的时候，baseURL设置非常重要，会影响到nginx设置，如果baseURL有设置加/api,vue所有访问请求都会加上/api，所以要分清楚

第一：vue在打包之前先安装插件
npm install --save-dev compression-webpack-plugin

第二：设置vue.config.js
找到module.exports中的configureWebpack，在里面添加如下：
    plugins: [
      new CompressionPlugin({
      test: /\.js$|\.css$/,  #正则匹配js和css文件
      threshold: 10240,     #对超过10K数据进行压缩
      deleteOriginalAssets:true,  #压缩完是否删除原文件 
      })
    ],
    
原文件如下（一般使用此方式简单）：
  configureWebpack: {
    plugins: [
      new CompressionPlugin({
      test: /\.js$|\.css$/,
      threshold: 10240,
      deleteOriginalAssets:true,
      })
    ],
    name: name,
    resolve: {
      alias: {
        '@': resolve('src')
      }
    },
  },
或者原文如下：
  configureWebpack: config=>{
    // provide the app's title in webpack's name field, so that
    // it can be accessed in index.html to inject the correct title.
    if(process.env.NODE_ENV === "production"){
      return {
        plugins: [
          new CompressionPlugin({
          test: /\.js$|\.css$/,
          threshold: 10240,
          deleteOriginalAssets:true,
          })
        ],
        name: name,
        resolve: {
          alias: {
            '@': resolve('src')
          }
        },
      }
    }
    return {
      name: name,
      resolve: {
        alias: {
          '@': resolve('src')
        }
      },
    }
  },
  
  第三：
  压缩好后，打包到服务器，nginx配置文件conf添加如下：
  1.在http下面添加如下内容：
  gzip  on; #开启或关闭gzip on off
  gzip_static on;#是否开启gzip静态资源
  gzip_disable "msie6"; #不使用gzip IE6
  gzip_min_length 100k; #gzip压缩最小文件大小，超出进行压缩（自行调节）
  gzip_buffers 4 16k; #buffer 不用修改
  gzip_comp_level 3; #压缩级别:1-10，数字越大压缩的越好，时间也越长
  gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png; #  压缩文件类型
  gzip_vary off;  #跟Squid等缓存服务有关，on的话会在Header里增加 "Vary: Accept-Encoding"
  
  2.由于之前vue有配置自定义路径，如下：
  vue.config.js中
  设置module.export={
    publicPath: '/ceshi/file/',
   }
  在router.js中设置
  mode: 'history', // require service support
  base:'/ceshi/file/',
  并且路由有设置/login登陆开头，所以nginx路径配置如下：
  注意：nginx设置不能加上vue里面设置的路由，否则刷新会报错，因为刷新时vue会自动添加上它自己的路由，所以，只需设定base中设定的就可以了
  
  location /ceshi/file {
        alias   /home/mmm/dist/;   #alias跟root的区别是,alias访问时不会url后面，会舍弃/ceshi/file，直接以index.html访问，root则相反
        index  index.html index.htm;
        try_files $uri $uri/ /ceshi/file;   #如果/ceshi/file匹配不，系统会在加后面加/在匹配，如还匹配不到会使用 /ceshi/file进行访问
    }

    location /home/mmm/dist/static {
        alias   /home/dist/static;
    }
    
    location /api {                    #api是访问django的设置的路径,vue中base_url有设置/api，django中父路由有设置api/
        include /etc/nginx/uwsgi_params;
        uwsgi_pass localhost:8001;
    }
  
  
  
  
